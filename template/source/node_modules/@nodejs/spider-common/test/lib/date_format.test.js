/**
 * @author yangyufei
 * @date 2019-02-26 17:43:42
 * @desc
 */
const dateFormat    = require('../../lib/date_format');
const helper        = require('../helper');

describe('测试 date_format.js', () => {
    it('测试 getDate 方法', async () => {
        await helper(() => {
            let dateStr = dateFormat.getDate();
            if (!/^\d{4}-\d{2}-\d{2}/g.test(dateStr)) return;

            dateStr = dateFormat.getDate(new Date());
            if (!/^\d{4}-\d{2}-\d{2}/g.test(dateStr)) return;

            return true;
        });
    });

    it('测试 getDateTime 方法', async () => {
        await helper(() => {
            let dateStr = dateFormat.getDateTime();
            if (!/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$/g.test(dateStr)) return;

            dateStr = dateFormat.getDateTime(new Date());
            if (!/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$/g.test(dateStr)) return;

            return true;
        })
    });

    it('测试 getTime 方法', () => {
        helper(() => {
            let dateStr = dateFormat.getTime();
            if (!/^\d{2}:\d{2}:\d{2}$/g.test(dateStr)) return;

            dateStr = dateFormat.getTime(new Date());
            if (!/^\d{2}:\d{2}:\d{2}$/g.test(dateStr)) return;

            return true;
        })
    });

    it('测试 getFullDateTime 方法', async () => {
        await helper(() => {
            let dateStr = dateFormat.getFullDateTime();
            if (!/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}$/g.test(dateStr)) return;

            dateStr = dateFormat.getFullDateTime(new Date());
            if (!/^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}$/g.test(dateStr)) return;

            return true;
        })
    });
});