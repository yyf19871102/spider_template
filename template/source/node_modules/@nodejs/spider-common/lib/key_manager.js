/**
 * @author yangyufei
 * @date 2019-03-11 11:24:40
 * @desc
 */
const _         = require('lodash');

class KeyManager {
    constructor(redis, appName) {
        this.namespace = `${appName}:keyManager`;
        this.redis = redis;
    }

    /**
     * 存入一个key
     * @param key
     * @return {Promise.<void>}
     */
    async saveKey(key) {
        await this.redis.sadd(this.namespace, key);
    }

    /**
     * 存入key对象
     * @param keyObject
     * @return {Promise.<void>}
     */
    async saveKeyObject(keyObject) {
        for (let key in keyObject) await this.redis.sadd(this.namespace, keyObject[key]);
    }

    async clearAllKeys() {
        let keyList = await this.redis.smembers(this.namespace);

        for (let key of keyList) await this.redis.del(key);

        await this.redis.del(this.namespace);
    }
}

exports.getInstance = (redis, appName) => new KeyManager(redis, appName = 'app');