/**
 * @author yangyufei
 * @date 2019-02-28 17:23:49
 * @desc
 */
const moment    = require('moment');
const _         = require('lodash');

const settings = module.exports = {};

settings.level = {
    trace   : {weight: 1, color: '#3C3CC4', name: 'TRACE'},
    debug   : {weight: 2, color: '#808080', name: 'DEBUG'},
    info    : {weight: 3, color: '#33CC33', name: 'INFO'},
    warn    : {weight: 4, color: '#EEEE11', name: 'WARN'},
    error   : {weight: 5, color: '#FF0000', name: 'ERROR'},
    fatal   : {weight: 6, color: '#990099', name: 'FATAL'},
};

/**
 * 生成message信息
 * @param level
 * @param msg
 * @returns {string}
 */
settings.makeMessage = (level, msg) => `[${moment().format('YYYY-MM-DD HH:mm:ss')}][${level}]${msg.toString()}`;

/**
 * 获取范围内的logger的操作
 * @param min
 * @param max
 * @returns {Array}
 */
settings.getLevelsByRange = (min, max) => {
    (!min || !settings.level.hasOwnProperty(min)) && (min = 'trace');
    (!max || !settings.level.hasOwnProperty(max)) && (max = 'fatal');

    let levelList = [];
    let minWeight = settings.level[min].weight;
    let maxWeight = settings.level[max].weight;

    _.keys(settings.level).forEach(levelName => {
        let levelObj = settings.level[levelName];
        let {weight} = levelObj;

        weight <= maxWeight && weight >= minWeight && levelList.push(levelName);
    });

    return levelList;
};